/* Pseudo-elements behave in a similar way, however they act as if you had added a whole new 
HTML element into the markup, rather than applying a class to existing elements. 
Pseudo-elements start with a double colon ::.

::pseudo-element-name

Note: Some early pseudo-elements used the single colon syntax, so you may sometimes see this 
in code or examples. Modern browsers support the early pseudo-elements with single- or double-colon 
syntax for backwards compatibility.

For example, if you wanted to select the first line of a paragraph you could wrap it in a <span> 
element and use an element selector; however, that would fail if the number of words you had wrapped 
were longer or shorter than the parent element's width. As we tend not to know how many words will 
fit on a line — as that will change if the screen width or font-size changes — it is impossible to robustly do this by adding HTML.

The ::first-line pseudo-element selector will do this for you reliably — if the number of words 
increases and decreases it will still only select the first line. */

article p::first-line {
    font-size: 120%;
    font-weight: bold;
    color: tomato;
}   

/* It acts as if a <span> was magically wrapped around that first formatted line, and updated each time the line length changed.

You can see that this selects the first line of both paragraphs. */


/* Combining pseudo-classes and pseudo-elements */
/* We are saying that we want to select the first line, of the first <p> element, which is inside an <article> element. */
article p:first-child::first-line{
    text-decoration: underline;
}