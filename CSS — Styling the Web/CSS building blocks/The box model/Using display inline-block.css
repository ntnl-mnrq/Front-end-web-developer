p {
  border: 2px solid rebeccapurple;
  width: 300px;
}

/* In the example below, we have a <span> inside a paragraph and have applied a 
width, height, margin, border, and padding to it. 
*You can see that the width and height are ignored. 
*The vertical margin, padding, and border are respected but they do not change the 
 relationship of other content to our inline box and so the padding and border overlaps 
 other words in the paragraph. 
*Horizontal padding, margins, and borders are respected and will cause other content to 
 move away from the box. */

span {
  width: 80px;
  height: 50px;

  margin: 20px;
  padding: 20px;
  background-color: lightblue;
  border: 2px solid blue;
}


/* There is a special value of display, which provides a middle ground between inline and block. 
This is useful for situations where you do not want an item to break onto a new line, but do want 
it to respect width and height and avoid the overlapping seen above.

An element with display: inline-block does a subset of the block things we already know about:

*The width and height properties are respected.
*padding, margin, and border will cause other elements to be pushed away from the box.

It does not, however, break onto a new line, and will only become larger than its content if you 
explicitly add width and height properties. */

span.inlineBlock {
  display: inline-block;
}



ul {
  display: flex;
  list-style:  none;
  margin: 0;
  padding: 0;
  border:1px solid #000;
}

li {
  margin: 5px;
}

.links-list a {
  background-color: rgb(179,57,81);
  color: #fff;
  text-decoration: none;
  padding: 1em 2em;

  display: inline-block;

  padding: 20px;
  width: 50px;
  height: 50px;
}

.links-list a:hover {
  background-color: rgb(66, 28, 40);
  color: #fff;
  padding: 21px;
}
    